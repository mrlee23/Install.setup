# Created 2018-02-27 Tue 10:02
#+OPTIONS: -:nil --:nil tex:t ^:nil num:nil
#+TITLE: Linux Commands
#+DATE: 2018-02-11
#+AUTHOR: Dongsoo Lee
#+MACRO: class @@html:<span class="org-programming-class">$1</span>@@
#+MACRO: func @@html:<span class="org-programming-function">$1</span>@@
#+MACRO: ret @@html:<span class="org-programming-return">$1</span>@@
#+MACRO: arg @@html:<span class="org-programming-argument">$1</span>@@
#+MACRO: argument @@html:<span class="org-programming-argument">$1</span>@@
#+MACRO: kwd @@html:<span class="org-programming-keyword">$1</span>@@
#+MACRO: type @@html:<span class="org-programming-type">$1</span>@@
#+MACRO: var @@html:<span class="org-programming-variable">$1</span>@@
#+MACRO: variable @@html:<span class="org-programming-variable">$1</span>@@
#+MACRO: const @@html:<span class="org-programming-constant">$1</span>@@
#+MACRO: path @@html:<span class="org-programming-path">$1</span>@@
#+MACRO: file @@html:<span class="org-programming-file">$1</span>@@
#+MACRO: opt @@html:<span class="org-programming-option">$1</span>@@
#+MACRO: option @@html:<span class="org-programming-option">$1</span>@@
#+MACRO: ver @@html:<span class="org-programming-version">$1</span>@@
#+MACRO: see (eval (lc-macro/see "$1"))
#+MACRO: link (eval (lc-macro/link "$1" "$2"))
#+MACRO: img (eval (lc-macro/inline-image "$1" "$2"))
#+MACRO: img-link (eval (lc-macro/inline-image-link "$1" "$2"))

#+MACRO: REDIRECT @@html:<script type="javascript">location.href = "$1"</script>@@
#+MACRO: VERSION (eval (lc-macro/version "$1"))
#+MACRO: LATEST_VERSION (eval (lc-macro/latest-version "$1"))
#+MACRO: BUILTIN (eval (lc-macro/builtin))
#+MACRO: INCLUDE_PROGRESS (eval (lc-macro/include-progress))
#+MACRO: INCLUDE_DOCS (eval (lc-macro/include-docs))
#+MACRO: META (eval (format "%s\n%s\n%s" (lc-macro/meta) (lc-macro/hreflang) (lc-macro/main-image)))
#+MACRO: IMAGE (eval (lc-macro/image "$1" "$2" "$3"))
#+MACRO: IMAGE_CENTER (eval (lc-macro/image "$1" "$2" "$3" "center"))
#+MACRO: IMAGE_RIGHT (eval (lc-macro/image "$1" "$2" "$3" "right"))
#+MACRO: IMAGE_MAIN (eval (lc-macro/image "main.jpg" "$1" "main" "right" t))
#+MACRO: IMAGE_LINK (eval (lc-macro/image-link "$1" "$2" "$3"))
#+MACRO: IMAGE_LINK_CENTER (eval (lc-macro/image-link "$1" "$2" "$3" "center"))
#+MACRO: IMAGE_LINK_RIGHT (eval (lc-macro/image-link "$1" "$2" "$3" "right"))
#+MACRO: CURRENT_LANG (eval (format "%s" lc-core/language))
#+MACRO: HEADER (eval (lc-macro/header))
#+MACRO: HEADER_LANGUAGE (eval (lc-macro/header-language))
#+MACRO: RSS_GENERATOR (eval (lc-macro/rss-generator))

#+HTML_HEAD: <meta name="google-site-verification" content="T-NdGYU-tk3BMWg0ULx4wIHD18IFoyrzEEcOoyz4xis" />
#+HTML_HEAD: <script async src="https://www.googletagmanager.com/gtag/js?id=UA-113933734-1"></script>
#+HTML_HEAD: <script>window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'UA-113933734-1');</script>

#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="/dist/org-html-themes/styles/readtheorg/css/htmlize.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="/dist/org-html-themes/styles/readtheorg/css/readtheorg.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="/dist/org-html-themes/styles/readtheorg/css/rtd-full.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="/dist/org-html-themes/styles/readtheorg/css/emphasis.css"/>

#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="/dist/assets/css.css"/>

#+HTML_HEAD: <script type="text/javascript" src="/dist/org-html-themes/styles/lib/js/jquery-2.1.3.min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="/dist/org-html-themes/styles/lib/js/bootstrap-3.3.4.min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="/dist/org-html-themes/styles/lib/js/jquery.stickytableheaders.min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="/dist/org-html-themes/styles/readtheorg/js/readtheorg.js"></script>

#+HTML_HEAD: <script type="text/javascript" src="/dist/assets/js.js"></script>

#+HTML_HEAD: <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">

#+HTML_HEAD: <meta name="title" content="Linux Commands - 리눅스 명령어">
#+HTML_HEAD: <meta name="description" content="">
#+HTML_HEAD: <meta name="by" content="Dongsoo Lee">
#+HTML_HEAD: <meta property="og:type" content="article">
#+HTML_HEAD: <meta property="og:title" content="Linux Commands - 리눅스 명령어">
#+HTML_HEAD: <meta property="og:description" content="">
#+HTML_HEAD: <meta name="twitter:title" content="Linux Commands - 리눅스 명령어">
#+HTML_HEAD: <meta name="twitter:description" content="">


#+HTML_HEAD: <link rel="alternate" href="http://linux-command.org/ko/" hreflang="ko" />
#+HTML_HEAD: <link rel="alternate" href="http://linux-command.org/en/" hreflang="en" />
#+HTML_HEAD: <link rel="alternate" href="http://linux-command.org/ja/" hreflang="ja" />
#+HTML_HEAD: <link rel="alternate" href="http://linux-command.org/es/" hreflang="es" />
#+HTML_HEAD: <link rel="alternate" href="http://linux-command.org/zh/" hreflang="zh" />


[[https://travis-ci.org/mrlee23/LinuxCommands][https://travis-ci.org/mrlee23/LinuxCommands.svg]]
[[https://github.com/mrlee23/LinuxCommands/blob/master/LICENSE][https://img.shields.io/github/license/mrlee23/LinuxCommands.svg]]

* 소개
운영체제 별 소프트웨어 설치 방법을 문서화하는 프로젝트입니다.

각 소프트웨어 별로 설치하기 전해 진행해야 하는 것 부터 설치 방법, 설치 후 간단한 설정 및 실행 방법 및 옵션 설명 까지가 이 프로젝트의 기술 범위입니다.

** Websites
- [[https://github.com/mrlee23/LinuxCommands][on GitHub]]
- [[http://linux-command.org][Linux Command homepage]]
  - [[http://linux-command.org/en][English]]
  - [[http://linux-command.org/es][Español]]
  - [[http://linux-command.org/ko][한국어]]
  - [[http://linux-command.org/zh][中文]]
  - [[http://linux-command.org/ja][日本語]]

* 진행 상황
| Name | Overview | Install | Usage | Options | See also |
|------+----------+---------+-------+---------+----------|
